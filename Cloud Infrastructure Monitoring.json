{
	"info": {
		"_postman_id": "6b1b71b7-cba9-4966-ad6d-f6d0884b491c",
		"name": "Cloud Infrastructure Monitoring",
		"description": "## Cloud Infrastructure Monitoring – Mock Networking Uptime API\n\n### Overview\n\nThis collection provides a mock implementation of a networking uptime API, designed specifically for testing the Monitors feature within Postman. It allows users to simulate uptime checks and validate monitoring workflows without requiring a live backend service.\n\n### Purpose\n\n- Demonstrate and test Postman Monitors: Use this collection to set up and experiment with scheduled monitoring, automated health checks, and alerting workflows in Postman.\n- Mock networking uptime endpoint: The included request simulates a typical uptime check, returning a randomized response to mimic real-world scenarios.\n\n### How to Use\n\n1. Set up a Monitor:\n   - Use this collection as the target for a Postman Monitor.\n   - Schedule the monitor to run at your desired frequency (e.g., every 5 minutes).\n   - Observe monitor run results, including status, response times, and test assertions.\n\n2. Customize Variables:\n   - The collection defines a variable `networkInteger` which can be used to randomize or parameterize requests.\n\n3. Review and Extend:\n   - The collection can be extended with additional mock endpoints or test scripts as needed for your monitoring scenarios.\n\n### Endpoints\n\n| Request Name        | Method | Path/URL                                 | Description                       |\n|---------------------|--------|------------------------------------------|-----------------------------------|\n| networking-uptime   | GET    | `postman-echo.com/get?number={{$randomInt}}` | Simulates a networking uptime check with a random integer parameter. |\n\n### Example Usage\n\n- Run the collection manually or via a monitor to simulate periodic uptime checks.\n- Review the test results and monitor logs to validate your monitoring setup.\n\n### Notes\n\n- This API is a mock and does not interact with real infrastructure.\n- Use it as a safe playground for learning and demonstrating Postman’s monitoring capabilities.\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37578199",
		"_collection_link": "https://devrel.postman.co/workspace/Cloud-Infrastructure-Resources~5d076a20-4bfa-44c7-8ec9-18bf23b14a32/collection/20042574-6b1b71b7-cba9-4966-ad6d-f6d0884b491c?action=share&source=collection_link&creator=37578199"
	},
	"item": [
		{
			"name": "networking-uptime",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let randomNumber = parseInt(pm.response.json().args.number);",
							"let numberLimit = 200;",
							"",
							"pm.test(`Server status is larger than ${numberLimit}`, function () {",
							"    pm.expect(randomNumber).to.be.greaterThan(numberLimit);",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "postman-echo.com/get?number={{$randomInt}}",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "number",
							"value": "{{$randomInt}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "networking-uptime",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "postman-echo.com/get?number={{$randomInt}}",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							],
							"query": [
								{
									"key": "number",
									"value": "{{$randomInt}}"
								}
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "networkInteger",
			"value": ""
		}
	]
}